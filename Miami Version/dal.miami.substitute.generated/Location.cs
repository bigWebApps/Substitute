
// Generated by MyGeneration Version # (1.1.5.1)

using System;
using System.Data;
using System.Collections;
using System.Collections.Specialized;

using Microsoft.Practices.EnterpriseLibrary.Data;
using NCI.EasyObjects;

namespace Miami.Substitute.Dal.Generated
{

    #region Schema

    public class LocationSchema : NCI.EasyObjects.Schema
    {
        private static ArrayList _entries;
        public static SchemaItem LocationId = new SchemaItem("LocationId", DbType.AnsiStringFixedLength, SchemaItemJustify.None, 4, false, false, false);
        public static SchemaItem Name = new SchemaItem("Name", DbType.AnsiString, SchemaItemJustify.None, 50, true, false, false);
        public static SchemaItem NameShort = new SchemaItem("NameShort", DbType.AnsiString, SchemaItemJustify.None, 25, true, false, false);
        public static SchemaItem Street = new SchemaItem("Street", DbType.AnsiString, SchemaItemJustify.None, 50, true, false, false);
        public static SchemaItem City = new SchemaItem("City", DbType.AnsiString, SchemaItemJustify.None, 20, true, false, false);
        public static SchemaItem ZipCode = new SchemaItem("ZipCode", DbType.AnsiString, SchemaItemJustify.None, 10, true, false, false);
        public static SchemaItem PhoneNumOffice = new SchemaItem("PhoneNumOffice", DbType.AnsiString, SchemaItemJustify.None, 14, true, false, false);
        public static SchemaItem RegionId = new SchemaItem("RegionId", DbType.AnsiStringFixedLength, SchemaItemJustify.None, 1, true, false, false);

        public override ArrayList SchemaEntries
        {
            get
            {
                if (_entries == null)
                {
                    _entries = new ArrayList();
                    _entries.Add(LocationSchema.LocationId);
                    _entries.Add(LocationSchema.Name);
                    _entries.Add(LocationSchema.NameShort);
                    _entries.Add(LocationSchema.Street);
                    _entries.Add(LocationSchema.City);
                    _entries.Add(LocationSchema.ZipCode);
                    _entries.Add(LocationSchema.PhoneNumOffice);
                    _entries.Add(LocationSchema.RegionId);
                }
                return _entries;
            }
        }
    }
    #endregion

    public class Location : EasyObject
    {
        public Location()
        {
            LocationSchema _schema = new LocationSchema();
            this.SchemaEntries = _schema.SchemaEntries;
            this.SchemaGlobal = "dbo";
        }

        //=================================================================
        //  	public Function LoadAll() As Boolean
        //=================================================================
        //  Loads all of the records in the database, and sets the currentRow to the first row
        //=================================================================
        public bool LoadAll()
        {
            return base.Query.Load();
        }

        public override void FlushData()
        {
            this._whereClause = null;
            this._aggregateClause = null;
            base.FlushData();
        }

        #region Properties
        public virtual string LocationId
        {
            get
            {
                return this.GetString(LocationSchema.LocationId.FieldName);
            }
            set
            {
                this.SetString(LocationSchema.LocationId.FieldName, value);
            }
        }
        public virtual string Name
        {
            get
            {
                return this.GetString(LocationSchema.Name.FieldName);
            }
            set
            {
                this.SetString(LocationSchema.Name.FieldName, value);
            }
        }
        public virtual string NameShort
        {
            get
            {
                return this.GetString(LocationSchema.NameShort.FieldName);
            }
            set
            {
                this.SetString(LocationSchema.NameShort.FieldName, value);
            }
        }
        public virtual string Street
        {
            get
            {
                return this.GetString(LocationSchema.Street.FieldName);
            }
            set
            {
                this.SetString(LocationSchema.Street.FieldName, value);
            }
        }
        public virtual string City
        {
            get
            {
                return this.GetString(LocationSchema.City.FieldName);
            }
            set
            {
                this.SetString(LocationSchema.City.FieldName, value);
            }
        }
        public virtual string ZipCode
        {
            get
            {
                return this.GetString(LocationSchema.ZipCode.FieldName);
            }
            set
            {
                this.SetString(LocationSchema.ZipCode.FieldName, value);
            }
        }
        public virtual string PhoneNumOffice
        {
            get
            {
                return this.GetString(LocationSchema.PhoneNumOffice.FieldName);
            }
            set
            {
                this.SetString(LocationSchema.PhoneNumOffice.FieldName, value);
            }
        }
        public virtual string RegionId
        {
            get
            {
                return this.GetString(LocationSchema.RegionId.FieldName);
            }
            set
            {
                this.SetString(LocationSchema.RegionId.FieldName, value);
            }
        }

        public override string TableName
        {
            get { return "Location"; }
        }

        #endregion

        #region String Properties

        public virtual string s_LocationId
        {
            get
            {
                return this.IsColumnNull(LocationSchema.LocationId.FieldName) ? string.Empty : base.GetStringAsString(LocationSchema.LocationId.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(LocationSchema.LocationId.FieldName);
                else
                    this.LocationId = base.SetStringAsString(LocationSchema.LocationId.FieldName, value);
            }
        }

        public virtual string s_Name
        {
            get
            {
                return this.IsColumnNull(LocationSchema.Name.FieldName) ? string.Empty : base.GetStringAsString(LocationSchema.Name.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(LocationSchema.Name.FieldName);
                else
                    this.Name = base.SetStringAsString(LocationSchema.Name.FieldName, value);
            }
        }

        public virtual string s_NameShort
        {
            get
            {
                return this.IsColumnNull(LocationSchema.NameShort.FieldName) ? string.Empty : base.GetStringAsString(LocationSchema.NameShort.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(LocationSchema.NameShort.FieldName);
                else
                    this.NameShort = base.SetStringAsString(LocationSchema.NameShort.FieldName, value);
            }
        }

        public virtual string s_Street
        {
            get
            {
                return this.IsColumnNull(LocationSchema.Street.FieldName) ? string.Empty : base.GetStringAsString(LocationSchema.Street.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(LocationSchema.Street.FieldName);
                else
                    this.Street = base.SetStringAsString(LocationSchema.Street.FieldName, value);
            }
        }

        public virtual string s_City
        {
            get
            {
                return this.IsColumnNull(LocationSchema.City.FieldName) ? string.Empty : base.GetStringAsString(LocationSchema.City.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(LocationSchema.City.FieldName);
                else
                    this.City = base.SetStringAsString(LocationSchema.City.FieldName, value);
            }
        }

        public virtual string s_ZipCode
        {
            get
            {
                return this.IsColumnNull(LocationSchema.ZipCode.FieldName) ? string.Empty : base.GetStringAsString(LocationSchema.ZipCode.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(LocationSchema.ZipCode.FieldName);
                else
                    this.ZipCode = base.SetStringAsString(LocationSchema.ZipCode.FieldName, value);
            }
        }

        public virtual string s_PhoneNumOffice
        {
            get
            {
                return this.IsColumnNull(LocationSchema.PhoneNumOffice.FieldName) ? string.Empty : base.GetStringAsString(LocationSchema.PhoneNumOffice.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(LocationSchema.PhoneNumOffice.FieldName);
                else
                    this.PhoneNumOffice = base.SetStringAsString(LocationSchema.PhoneNumOffice.FieldName, value);
            }
        }

        public virtual string s_RegionId
        {
            get
            {
                return this.IsColumnNull(LocationSchema.RegionId.FieldName) ? string.Empty : base.GetStringAsString(LocationSchema.RegionId.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(LocationSchema.RegionId.FieldName);
                else
                    this.RegionId = base.SetStringAsString(LocationSchema.RegionId.FieldName, value);
            }
        }


        #endregion

        #region Where Clause
        public class WhereClause
        {
            public WhereClause(EasyObject entity)
            {
                this._entity = entity;
            }

            public TearOffWhereParameter TearOff
            {
                get
                {
                    if (_tearOff == null)
                    {
                        _tearOff = new TearOffWhereParameter(this);
                    }

                    return _tearOff;
                }
            }

            #region TearOff's
            public class TearOffWhereParameter
            {
                public TearOffWhereParameter(WhereClause clause)
                {
                    this._clause = clause;
                }


                public WhereParameter LocationId
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(LocationSchema.LocationId);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter Name
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(LocationSchema.Name);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter NameShort
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(LocationSchema.NameShort);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter Street
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(LocationSchema.Street);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter City
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(LocationSchema.City);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter ZipCode
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(LocationSchema.ZipCode);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter PhoneNumOffice
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(LocationSchema.PhoneNumOffice);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter RegionId
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(LocationSchema.RegionId);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }


                private WhereClause _clause;
            }
            #endregion

            public WhereParameter LocationId
            {
                get
                {
                    if (_LocationId_W == null)
                    {
                        _LocationId_W = TearOff.LocationId;
                    }
                    return _LocationId_W;
                }
            }

            public WhereParameter Name
            {
                get
                {
                    if (_Name_W == null)
                    {
                        _Name_W = TearOff.Name;
                    }
                    return _Name_W;
                }
            }

            public WhereParameter NameShort
            {
                get
                {
                    if (_NameShort_W == null)
                    {
                        _NameShort_W = TearOff.NameShort;
                    }
                    return _NameShort_W;
                }
            }

            public WhereParameter Street
            {
                get
                {
                    if (_Street_W == null)
                    {
                        _Street_W = TearOff.Street;
                    }
                    return _Street_W;
                }
            }

            public WhereParameter City
            {
                get
                {
                    if (_City_W == null)
                    {
                        _City_W = TearOff.City;
                    }
                    return _City_W;
                }
            }

            public WhereParameter ZipCode
            {
                get
                {
                    if (_ZipCode_W == null)
                    {
                        _ZipCode_W = TearOff.ZipCode;
                    }
                    return _ZipCode_W;
                }
            }

            public WhereParameter PhoneNumOffice
            {
                get
                {
                    if (_PhoneNumOffice_W == null)
                    {
                        _PhoneNumOffice_W = TearOff.PhoneNumOffice;
                    }
                    return _PhoneNumOffice_W;
                }
            }

            public WhereParameter RegionId
            {
                get
                {
                    if (_RegionId_W == null)
                    {
                        _RegionId_W = TearOff.RegionId;
                    }
                    return _RegionId_W;
                }
            }

            private WhereParameter _LocationId_W = null;
            private WhereParameter _Name_W = null;
            private WhereParameter _NameShort_W = null;
            private WhereParameter _Street_W = null;
            private WhereParameter _City_W = null;
            private WhereParameter _ZipCode_W = null;
            private WhereParameter _PhoneNumOffice_W = null;
            private WhereParameter _RegionId_W = null;

            public void WhereClauseReset()
            {
                _LocationId_W = null;
                _Name_W = null;
                _NameShort_W = null;
                _Street_W = null;
                _City_W = null;
                _ZipCode_W = null;
                _PhoneNumOffice_W = null;
                _RegionId_W = null;

                this._entity.Query.FlushWhereParameters();

            }

            private EasyObject _entity;
            private TearOffWhereParameter _tearOff;

        }

        public WhereClause Where
        {
            get
            {
                if (_whereClause == null)
                {
                    _whereClause = new WhereClause(this);
                }

                return _whereClause;
            }
        }

        private WhereClause _whereClause = null;
        #endregion

        #region Aggregate Clause
        public class AggregateClause
        {
            public AggregateClause(EasyObject entity)
            {
                this._entity = entity;
            }

            public TearOffAggregateParameter TearOff
            {
                get
                {
                    if (_tearOff == null)
                    {
                        _tearOff = new TearOffAggregateParameter(this);
                    }

                    return _tearOff;
                }
            }

            #region TearOff's
            public class TearOffAggregateParameter
            {
                public TearOffAggregateParameter(AggregateClause clause)
                {
                    this._clause = clause;
                }


                public AggregateParameter LocationId
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(LocationSchema.LocationId);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter Name
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(LocationSchema.Name);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter NameShort
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(LocationSchema.NameShort);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter Street
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(LocationSchema.Street);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter City
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(LocationSchema.City);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter ZipCode
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(LocationSchema.ZipCode);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter PhoneNumOffice
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(LocationSchema.PhoneNumOffice);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter RegionId
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(LocationSchema.RegionId);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }


                private AggregateClause _clause;
            }
            #endregion

            public AggregateParameter LocationId
            {
                get
                {
                    if (_LocationId_W == null)
                    {
                        _LocationId_W = TearOff.LocationId;
                    }
                    return _LocationId_W;
                }
            }

            public AggregateParameter Name
            {
                get
                {
                    if (_Name_W == null)
                    {
                        _Name_W = TearOff.Name;
                    }
                    return _Name_W;
                }
            }

            public AggregateParameter NameShort
            {
                get
                {
                    if (_NameShort_W == null)
                    {
                        _NameShort_W = TearOff.NameShort;
                    }
                    return _NameShort_W;
                }
            }

            public AggregateParameter Street
            {
                get
                {
                    if (_Street_W == null)
                    {
                        _Street_W = TearOff.Street;
                    }
                    return _Street_W;
                }
            }

            public AggregateParameter City
            {
                get
                {
                    if (_City_W == null)
                    {
                        _City_W = TearOff.City;
                    }
                    return _City_W;
                }
            }

            public AggregateParameter ZipCode
            {
                get
                {
                    if (_ZipCode_W == null)
                    {
                        _ZipCode_W = TearOff.ZipCode;
                    }
                    return _ZipCode_W;
                }
            }

            public AggregateParameter PhoneNumOffice
            {
                get
                {
                    if (_PhoneNumOffice_W == null)
                    {
                        _PhoneNumOffice_W = TearOff.PhoneNumOffice;
                    }
                    return _PhoneNumOffice_W;
                }
            }

            public AggregateParameter RegionId
            {
                get
                {
                    if (_RegionId_W == null)
                    {
                        _RegionId_W = TearOff.RegionId;
                    }
                    return _RegionId_W;
                }
            }

            private AggregateParameter _LocationId_W = null;
            private AggregateParameter _Name_W = null;
            private AggregateParameter _NameShort_W = null;
            private AggregateParameter _Street_W = null;
            private AggregateParameter _City_W = null;
            private AggregateParameter _ZipCode_W = null;
            private AggregateParameter _PhoneNumOffice_W = null;
            private AggregateParameter _RegionId_W = null;

            public void AggregateClauseReset()
            {
                _LocationId_W = null;
                _Name_W = null;
                _NameShort_W = null;
                _Street_W = null;
                _City_W = null;
                _ZipCode_W = null;
                _PhoneNumOffice_W = null;
                _RegionId_W = null;

                this._entity.Query.FlushAggregateParameters();

            }

            private EasyObject _entity;
            private TearOffAggregateParameter _tearOff;

        }

        public AggregateClause Aggregate
        {
            get
            {
                if (_aggregateClause == null)
                {
                    _aggregateClause = new AggregateClause(this);
                }

                return _aggregateClause;
            }
        }

        private AggregateClause _aggregateClause = null;
        #endregion
    }
}