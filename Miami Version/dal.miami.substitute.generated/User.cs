
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Collections;
using System.Collections.Specialized;

using Microsoft.Practices.EnterpriseLibrary.Data;
using NCI.EasyObjects;

namespace Miami.Substitute.Dal.Generated
{

    #region Schema

    public class UserSchema : NCI.EasyObjects.Schema
    {
        private static ArrayList _entries;
        public static SchemaItem UserId = new SchemaItem("UserId", DbType.Int32, false, true, false, false, false);
        public static SchemaItem LoginName = new SchemaItem("LoginName", DbType.String, SchemaItemJustify.None, 255, true, false, false);
        public static SchemaItem Password = new SchemaItem("Password", DbType.String, SchemaItemJustify.None, 50, true, false, false);
        public static SchemaItem Email = new SchemaItem("Email", DbType.String, SchemaItemJustify.None, 255, true, false, false);
        public static SchemaItem FirstName = new SchemaItem("FirstName", DbType.String, SchemaItemJustify.None, 255, true, false, false);
        public static SchemaItem LastName = new SchemaItem("LastName", DbType.String, SchemaItemJustify.None, 255, true, false, false);
        public static SchemaItem MiddleName = new SchemaItem("MiddleName", DbType.String, SchemaItemJustify.None, 255, true, false, false);
        public static SchemaItem LastLoginDate = new SchemaItem("LastLoginDate", DbType.DateTime, false, true, false, false, false);
        public static SchemaItem IsOrganizationAdministrator = new SchemaItem("IsOrganizationAdministrator", DbType.Boolean, false, true, false, false, false);
        public static SchemaItem Deleted = new SchemaItem("Deleted", DbType.Boolean, false, true, false, false, false);
        public static SchemaItem PayCode = new SchemaItem("PayCode", DbType.AnsiStringFixedLength, SchemaItemJustify.None, 1, true, false, false);
        public static SchemaItem BoardCode = new SchemaItem("BoardCode", DbType.AnsiStringFixedLength, SchemaItemJustify.None, 2, true, false, false);
        public static SchemaItem LocationId = new SchemaItem("LocationId", DbType.AnsiStringFixedLength, SchemaItemJustify.None, 4, true, false, false);
        public static SchemaItem CellPhone = new SchemaItem("CellPhone", DbType.AnsiString, SchemaItemJustify.None, 14, true, false, false);

        public override ArrayList SchemaEntries
        {
            get
            {
                if (_entries == null)
                {
                    _entries = new ArrayList();
                    _entries.Add(UserSchema.UserId);
                    _entries.Add(UserSchema.LoginName);
                    _entries.Add(UserSchema.Password);
                    _entries.Add(UserSchema.Email);
                    _entries.Add(UserSchema.FirstName);
                    _entries.Add(UserSchema.LastName);
                    _entries.Add(UserSchema.MiddleName);
                    _entries.Add(UserSchema.LastLoginDate);
                    _entries.Add(UserSchema.IsOrganizationAdministrator);
                    _entries.Add(UserSchema.Deleted);
                    _entries.Add(UserSchema.PayCode);
                    _entries.Add(UserSchema.BoardCode);
                    _entries.Add(UserSchema.LocationId);
                    _entries.Add(UserSchema.CellPhone);
                }
                return _entries;
            }
        }
    }
    #endregion

    public class User : EasyObject
    {
        public User()
        {
            UserSchema _schema = new UserSchema();
            this.SchemaEntries = _schema.SchemaEntries;
            this.SchemaGlobal = "dbo";
        }

        //=================================================================
        //  	public Function LoadAll() As Boolean
        //=================================================================
        //  Loads all of the records in the database, and sets the currentRow to the first row
        //=================================================================
        public bool LoadAll()
        {
            return base.Query.Load();
        }

        public override void FlushData()
        {
            this._whereClause = null;
            this._aggregateClause = null;
            base.FlushData();
        }

        #region Properties
        public virtual int UserId
        {
            get
            {
                return this.GetInteger(UserSchema.UserId.FieldName);
            }
            set
            {
                this.SetInteger(UserSchema.UserId.FieldName, value);
            }
        }
        public virtual string LoginName
        {
            get
            {
                return this.GetString(UserSchema.LoginName.FieldName);
            }
            set
            {
                this.SetString(UserSchema.LoginName.FieldName, value);
            }
        }
        public virtual string Password
        {
            get
            {
                return this.GetString(UserSchema.Password.FieldName);
            }
            set
            {
                this.SetString(UserSchema.Password.FieldName, value);
            }
        }
        public virtual string Email
        {
            get
            {
                return this.GetString(UserSchema.Email.FieldName);
            }
            set
            {
                this.SetString(UserSchema.Email.FieldName, value);
            }
        }
        public virtual string FirstName
        {
            get
            {
                return this.GetString(UserSchema.FirstName.FieldName);
            }
            set
            {
                this.SetString(UserSchema.FirstName.FieldName, value);
            }
        }
        public virtual string LastName
        {
            get
            {
                return this.GetString(UserSchema.LastName.FieldName);
            }
            set
            {
                this.SetString(UserSchema.LastName.FieldName, value);
            }
        }
        public virtual string MiddleName
        {
            get
            {
                return this.GetString(UserSchema.MiddleName.FieldName);
            }
            set
            {
                this.SetString(UserSchema.MiddleName.FieldName, value);
            }
        }
        public virtual DateTime LastLoginDate
        {
            get
            {
                return this.GetDateTime(UserSchema.LastLoginDate.FieldName);
            }
            set
            {
                this.SetDateTime(UserSchema.LastLoginDate.FieldName, value);
            }
        }
        public virtual bool IsOrganizationAdministrator
        {
            get
            {
                return this.GetBoolean(UserSchema.IsOrganizationAdministrator.FieldName);
            }
            set
            {
                this.SetBoolean(UserSchema.IsOrganizationAdministrator.FieldName, value);
            }
        }
        public virtual bool Deleted
        {
            get
            {
                return this.GetBoolean(UserSchema.Deleted.FieldName);
            }
            set
            {
                this.SetBoolean(UserSchema.Deleted.FieldName, value);
            }
        }
        public virtual string PayCode
        {
            get
            {
                return this.GetString(UserSchema.PayCode.FieldName);
            }
            set
            {
                this.SetString(UserSchema.PayCode.FieldName, value);
            }
        }
        public virtual string BoardCode
        {
            get
            {
                return this.GetString(UserSchema.BoardCode.FieldName);
            }
            set
            {
                this.SetString(UserSchema.BoardCode.FieldName, value);
            }
        }
        public virtual string LocationId
        {
            get
            {
                return this.GetString(UserSchema.LocationId.FieldName);
            }
            set
            {
                this.SetString(UserSchema.LocationId.FieldName, value);
            }
        }
        public virtual string CellPhone
        {
            get
            {
                return this.GetString(UserSchema.CellPhone.FieldName);
            }
            set
            {
                this.SetString(UserSchema.CellPhone.FieldName, value);
            }
        }

        public override string TableName
        {
            get { return "User"; }
        }

        #endregion

        #region String Properties

        public virtual string s_UserId
        {
            get
            {
                return this.IsColumnNull(UserSchema.UserId.FieldName) ? string.Empty : base.GetIntegerAsString(UserSchema.UserId.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.UserId.FieldName);
                else
                    this.UserId = base.SetIntegerAsString(UserSchema.UserId.FieldName, value);
            }
        }

        public virtual string s_LoginName
        {
            get
            {
                return this.IsColumnNull(UserSchema.LoginName.FieldName) ? string.Empty : base.GetStringAsString(UserSchema.LoginName.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.LoginName.FieldName);
                else
                    this.LoginName = base.SetStringAsString(UserSchema.LoginName.FieldName, value);
            }
        }

        public virtual string s_Password
        {
            get
            {
                return this.IsColumnNull(UserSchema.Password.FieldName) ? string.Empty : base.GetStringAsString(UserSchema.Password.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.Password.FieldName);
                else
                    this.Password = base.SetStringAsString(UserSchema.Password.FieldName, value);
            }
        }

        public virtual string s_Email
        {
            get
            {
                return this.IsColumnNull(UserSchema.Email.FieldName) ? string.Empty : base.GetStringAsString(UserSchema.Email.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.Email.FieldName);
                else
                    this.Email = base.SetStringAsString(UserSchema.Email.FieldName, value);
            }
        }

        public virtual string s_FirstName
        {
            get
            {
                return this.IsColumnNull(UserSchema.FirstName.FieldName) ? string.Empty : base.GetStringAsString(UserSchema.FirstName.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.FirstName.FieldName);
                else
                    this.FirstName = base.SetStringAsString(UserSchema.FirstName.FieldName, value);
            }
        }

        public virtual string s_LastName
        {
            get
            {
                return this.IsColumnNull(UserSchema.LastName.FieldName) ? string.Empty : base.GetStringAsString(UserSchema.LastName.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.LastName.FieldName);
                else
                    this.LastName = base.SetStringAsString(UserSchema.LastName.FieldName, value);
            }
        }

        public virtual string s_MiddleName
        {
            get
            {
                return this.IsColumnNull(UserSchema.MiddleName.FieldName) ? string.Empty : base.GetStringAsString(UserSchema.MiddleName.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.MiddleName.FieldName);
                else
                    this.MiddleName = base.SetStringAsString(UserSchema.MiddleName.FieldName, value);
            }
        }

        public virtual string s_LastLoginDate
        {
            get
            {
                return this.IsColumnNull(UserSchema.LastLoginDate.FieldName) ? string.Empty : base.GetDateTimeAsString(UserSchema.LastLoginDate.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.LastLoginDate.FieldName);
                else
                    this.LastLoginDate = base.SetDateTimeAsString(UserSchema.LastLoginDate.FieldName, value);
            }
        }

        public virtual string s_IsOrganizationAdministrator
        {
            get
            {
                return this.IsColumnNull(UserSchema.IsOrganizationAdministrator.FieldName) ? string.Empty : base.GetBooleanAsString(UserSchema.IsOrganizationAdministrator.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.IsOrganizationAdministrator.FieldName);
                else
                    this.IsOrganizationAdministrator = base.SetBooleanAsString(UserSchema.IsOrganizationAdministrator.FieldName, value);
            }
        }

        public virtual string s_Deleted
        {
            get
            {
                return this.IsColumnNull(UserSchema.Deleted.FieldName) ? string.Empty : base.GetBooleanAsString(UserSchema.Deleted.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.Deleted.FieldName);
                else
                    this.Deleted = base.SetBooleanAsString(UserSchema.Deleted.FieldName, value);
            }
        }

        public virtual string s_PayCode
        {
            get
            {
                return this.IsColumnNull(UserSchema.PayCode.FieldName) ? string.Empty : base.GetStringAsString(UserSchema.PayCode.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.PayCode.FieldName);
                else
                    this.PayCode = base.SetStringAsString(UserSchema.PayCode.FieldName, value);
            }
        }

        public virtual string s_BoardCode
        {
            get
            {
                return this.IsColumnNull(UserSchema.BoardCode.FieldName) ? string.Empty : base.GetStringAsString(UserSchema.BoardCode.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.BoardCode.FieldName);
                else
                    this.BoardCode = base.SetStringAsString(UserSchema.BoardCode.FieldName, value);
            }
        }

        public virtual string s_LocationId
        {
            get
            {
                return this.IsColumnNull(UserSchema.LocationId.FieldName) ? string.Empty : base.GetStringAsString(UserSchema.LocationId.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.LocationId.FieldName);
                else
                    this.LocationId = base.SetStringAsString(UserSchema.LocationId.FieldName, value);
            }
        }

        public virtual string s_CellPhone
        {
            get
            {
                return this.IsColumnNull(UserSchema.CellPhone.FieldName) ? string.Empty : base.GetStringAsString(UserSchema.CellPhone.FieldName);
            }
            set
            {
                if (string.Empty == value)
                    this.SetColumnNull(UserSchema.CellPhone.FieldName);
                else
                    this.CellPhone = base.SetStringAsString(UserSchema.CellPhone.FieldName, value);
            }
        }


        #endregion

        #region Where Clause
        public class WhereClause
        {
            public WhereClause(EasyObject entity)
            {
                this._entity = entity;
            }

            public TearOffWhereParameter TearOff
            {
                get
                {
                    if (_tearOff == null)
                    {
                        _tearOff = new TearOffWhereParameter(this);
                    }

                    return _tearOff;
                }
            }

            #region TearOff's
            public class TearOffWhereParameter
            {
                public TearOffWhereParameter(WhereClause clause)
                {
                    this._clause = clause;
                }


                public WhereParameter UserId
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.UserId);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter LoginName
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.LoginName);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter Password
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.Password);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter Email
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.Email);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter FirstName
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.FirstName);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter LastName
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.LastName);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter MiddleName
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.MiddleName);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter LastLoginDate
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.LastLoginDate);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter IsOrganizationAdministrator
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.IsOrganizationAdministrator);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter Deleted
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.Deleted);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter PayCode
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.PayCode);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter BoardCode
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.BoardCode);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter LocationId
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.LocationId);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }

                public WhereParameter CellPhone
                {
                    get
                    {
                        WhereParameter wp = new WhereParameter(UserSchema.CellPhone);
                        this._clause._entity.Query.AddWhereParameter(wp);
                        return wp;
                    }
                }


                private WhereClause _clause;
            }
            #endregion

            public WhereParameter UserId
            {
                get
                {
                    if (_UserId_W == null)
                    {
                        _UserId_W = TearOff.UserId;
                    }
                    return _UserId_W;
                }
            }

            public WhereParameter LoginName
            {
                get
                {
                    if (_LoginName_W == null)
                    {
                        _LoginName_W = TearOff.LoginName;
                    }
                    return _LoginName_W;
                }
            }

            public WhereParameter Password
            {
                get
                {
                    if (_Password_W == null)
                    {
                        _Password_W = TearOff.Password;
                    }
                    return _Password_W;
                }
            }

            public WhereParameter Email
            {
                get
                {
                    if (_Email_W == null)
                    {
                        _Email_W = TearOff.Email;
                    }
                    return _Email_W;
                }
            }

            public WhereParameter FirstName
            {
                get
                {
                    if (_FirstName_W == null)
                    {
                        _FirstName_W = TearOff.FirstName;
                    }
                    return _FirstName_W;
                }
            }

            public WhereParameter LastName
            {
                get
                {
                    if (_LastName_W == null)
                    {
                        _LastName_W = TearOff.LastName;
                    }
                    return _LastName_W;
                }
            }

            public WhereParameter MiddleName
            {
                get
                {
                    if (_MiddleName_W == null)
                    {
                        _MiddleName_W = TearOff.MiddleName;
                    }
                    return _MiddleName_W;
                }
            }

            public WhereParameter LastLoginDate
            {
                get
                {
                    if (_LastLoginDate_W == null)
                    {
                        _LastLoginDate_W = TearOff.LastLoginDate;
                    }
                    return _LastLoginDate_W;
                }
            }

            public WhereParameter IsOrganizationAdministrator
            {
                get
                {
                    if (_IsOrganizationAdministrator_W == null)
                    {
                        _IsOrganizationAdministrator_W = TearOff.IsOrganizationAdministrator;
                    }
                    return _IsOrganizationAdministrator_W;
                }
            }

            public WhereParameter Deleted
            {
                get
                {
                    if (_Deleted_W == null)
                    {
                        _Deleted_W = TearOff.Deleted;
                    }
                    return _Deleted_W;
                }
            }

            public WhereParameter PayCode
            {
                get
                {
                    if (_PayCode_W == null)
                    {
                        _PayCode_W = TearOff.PayCode;
                    }
                    return _PayCode_W;
                }
            }

            public WhereParameter BoardCode
            {
                get
                {
                    if (_BoardCode_W == null)
                    {
                        _BoardCode_W = TearOff.BoardCode;
                    }
                    return _BoardCode_W;
                }
            }

            public WhereParameter LocationId
            {
                get
                {
                    if (_LocationId_W == null)
                    {
                        _LocationId_W = TearOff.LocationId;
                    }
                    return _LocationId_W;
                }
            }

            public WhereParameter CellPhone
            {
                get
                {
                    if (_CellPhone_W == null)
                    {
                        _CellPhone_W = TearOff.CellPhone;
                    }
                    return _CellPhone_W;
                }
            }

            private WhereParameter _UserId_W = null;
            private WhereParameter _LoginName_W = null;
            private WhereParameter _Password_W = null;
            private WhereParameter _Email_W = null;
            private WhereParameter _FirstName_W = null;
            private WhereParameter _LastName_W = null;
            private WhereParameter _MiddleName_W = null;
            private WhereParameter _LastLoginDate_W = null;
            private WhereParameter _IsOrganizationAdministrator_W = null;
            private WhereParameter _Deleted_W = null;
            private WhereParameter _PayCode_W = null;
            private WhereParameter _BoardCode_W = null;
            private WhereParameter _LocationId_W = null;
            private WhereParameter _CellPhone_W = null;

            public void WhereClauseReset()
            {
                _UserId_W = null;
                _LoginName_W = null;
                _Password_W = null;
                _Email_W = null;
                _FirstName_W = null;
                _LastName_W = null;
                _MiddleName_W = null;
                _LastLoginDate_W = null;
                _IsOrganizationAdministrator_W = null;
                _Deleted_W = null;
                _PayCode_W = null;
                _BoardCode_W = null;
                _LocationId_W = null;
                _CellPhone_W = null;

                this._entity.Query.FlushWhereParameters();

            }

            private EasyObject _entity;
            private TearOffWhereParameter _tearOff;

        }

        public WhereClause Where
        {
            get
            {
                if (_whereClause == null)
                {
                    _whereClause = new WhereClause(this);
                }

                return _whereClause;
            }
        }

        private WhereClause _whereClause = null;
        #endregion

        #region Aggregate Clause
        public class AggregateClause
        {
            public AggregateClause(EasyObject entity)
            {
                this._entity = entity;
            }

            public TearOffAggregateParameter TearOff
            {
                get
                {
                    if (_tearOff == null)
                    {
                        _tearOff = new TearOffAggregateParameter(this);
                    }

                    return _tearOff;
                }
            }

            #region TearOff's
            public class TearOffAggregateParameter
            {
                public TearOffAggregateParameter(AggregateClause clause)
                {
                    this._clause = clause;
                }


                public AggregateParameter UserId
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.UserId);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter LoginName
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.LoginName);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter Password
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.Password);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter Email
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.Email);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter FirstName
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.FirstName);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter LastName
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.LastName);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter MiddleName
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.MiddleName);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter LastLoginDate
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.LastLoginDate);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter IsOrganizationAdministrator
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.IsOrganizationAdministrator);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter Deleted
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.Deleted);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter PayCode
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.PayCode);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter BoardCode
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.BoardCode);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter LocationId
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.LocationId);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }

                public AggregateParameter CellPhone
                {
                    get
                    {
                        AggregateParameter ap = new AggregateParameter(UserSchema.CellPhone);
                        this._clause._entity.Query.AddAggregateParameter(ap);
                        return ap;
                    }
                }


                private AggregateClause _clause;
            }
            #endregion

            public AggregateParameter UserId
            {
                get
                {
                    if (_UserId_W == null)
                    {
                        _UserId_W = TearOff.UserId;
                    }
                    return _UserId_W;
                }
            }

            public AggregateParameter LoginName
            {
                get
                {
                    if (_LoginName_W == null)
                    {
                        _LoginName_W = TearOff.LoginName;
                    }
                    return _LoginName_W;
                }
            }

            public AggregateParameter Password
            {
                get
                {
                    if (_Password_W == null)
                    {
                        _Password_W = TearOff.Password;
                    }
                    return _Password_W;
                }
            }

            public AggregateParameter Email
            {
                get
                {
                    if (_Email_W == null)
                    {
                        _Email_W = TearOff.Email;
                    }
                    return _Email_W;
                }
            }

            public AggregateParameter FirstName
            {
                get
                {
                    if (_FirstName_W == null)
                    {
                        _FirstName_W = TearOff.FirstName;
                    }
                    return _FirstName_W;
                }
            }

            public AggregateParameter LastName
            {
                get
                {
                    if (_LastName_W == null)
                    {
                        _LastName_W = TearOff.LastName;
                    }
                    return _LastName_W;
                }
            }

            public AggregateParameter MiddleName
            {
                get
                {
                    if (_MiddleName_W == null)
                    {
                        _MiddleName_W = TearOff.MiddleName;
                    }
                    return _MiddleName_W;
                }
            }

            public AggregateParameter LastLoginDate
            {
                get
                {
                    if (_LastLoginDate_W == null)
                    {
                        _LastLoginDate_W = TearOff.LastLoginDate;
                    }
                    return _LastLoginDate_W;
                }
            }

            public AggregateParameter IsOrganizationAdministrator
            {
                get
                {
                    if (_IsOrganizationAdministrator_W == null)
                    {
                        _IsOrganizationAdministrator_W = TearOff.IsOrganizationAdministrator;
                    }
                    return _IsOrganizationAdministrator_W;
                }
            }

            public AggregateParameter Deleted
            {
                get
                {
                    if (_Deleted_W == null)
                    {
                        _Deleted_W = TearOff.Deleted;
                    }
                    return _Deleted_W;
                }
            }

            public AggregateParameter PayCode
            {
                get
                {
                    if (_PayCode_W == null)
                    {
                        _PayCode_W = TearOff.PayCode;
                    }
                    return _PayCode_W;
                }
            }

            public AggregateParameter BoardCode
            {
                get
                {
                    if (_BoardCode_W == null)
                    {
                        _BoardCode_W = TearOff.BoardCode;
                    }
                    return _BoardCode_W;
                }
            }

            public AggregateParameter LocationId
            {
                get
                {
                    if (_LocationId_W == null)
                    {
                        _LocationId_W = TearOff.LocationId;
                    }
                    return _LocationId_W;
                }
            }

            public AggregateParameter CellPhone
            {
                get
                {
                    if (_CellPhone_W == null)
                    {
                        _CellPhone_W = TearOff.CellPhone;
                    }
                    return _CellPhone_W;
                }
            }

            private AggregateParameter _UserId_W = null;
            private AggregateParameter _LoginName_W = null;
            private AggregateParameter _Password_W = null;
            private AggregateParameter _Email_W = null;
            private AggregateParameter _FirstName_W = null;
            private AggregateParameter _LastName_W = null;
            private AggregateParameter _MiddleName_W = null;
            private AggregateParameter _LastLoginDate_W = null;
            private AggregateParameter _IsOrganizationAdministrator_W = null;
            private AggregateParameter _Deleted_W = null;
            private AggregateParameter _PayCode_W = null;
            private AggregateParameter _BoardCode_W = null;
            private AggregateParameter _LocationId_W = null;
            private AggregateParameter _CellPhone_W = null;

            public void AggregateClauseReset()
            {
                _UserId_W = null;
                _LoginName_W = null;
                _Password_W = null;
                _Email_W = null;
                _FirstName_W = null;
                _LastName_W = null;
                _MiddleName_W = null;
                _LastLoginDate_W = null;
                _IsOrganizationAdministrator_W = null;
                _Deleted_W = null;
                _PayCode_W = null;
                _BoardCode_W = null;
                _LocationId_W = null;
                _CellPhone_W = null;

                this._entity.Query.FlushAggregateParameters();

            }

            private EasyObject _entity;
            private TearOffAggregateParameter _tearOff;

        }

        public AggregateClause Aggregate
        {
            get
            {
                if (_aggregateClause == null)
                {
                    _aggregateClause = new AggregateClause(this);
                }

                return _aggregateClause;
            }
        }

        private AggregateClause _aggregateClause = null;
        #endregion
    }
}